stages:
  - test
  - build
  - deploy

variables:
  PNPM_STORE_DIR: .pnpm-store
  CYPRESS_CACHE_FOLDER: .cypress-cache
  CI: "true"
  HUSKY: "0"

.cache-template: &cache-template
  key:
    files:
      - pnpm-lock.yaml
    prefix: ${CI_COMMIT_REF_SLUG}
  paths:
    - ${PNPM_STORE_DIR}
    - node_modules/
    - ${CYPRESS_CACHE_FOLDER}
    - .npm/
  policy: pull-push
  
.cache-pull-template: &cache-pull-template
  key:
    files:
      - pnpm-lock.yaml
    prefix: ${CI_COMMIT_REF_SLUG}
  paths:
    - ${PNPM_STORE_DIR}
    - node_modules/
    - ${CYPRESS_CACHE_FOLDER}
    - .npm/
  policy: pull

.setup-script: &setup-script
  - apk add --no-cache git
  - npm install -g pnpm@10.x
  - pnpm config set store-dir $PNPM_STORE_DIR
  - pnpm install --frozen-lockfile --prefer-offline

unit-tests:
  stage: test
  image: node:18-alpine
  variables:
    NODE_ENV: "development"
  cache: *cache-template
  before_script: *setup-script
  script:
    - pnpm test
  artifacts:
    paths:
      - coverage/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml
      junit: junit.xml
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH

build-package:
  stage: build
  image: node:18-alpine
  cache: *cache-template
  before_script: *setup-script
  script:
    - pnpm run build
    - pnpm run size
  artifacts:
    paths:
      - dist/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_BRANCH
    - if: $CI_COMMIT_TAG

publish-npm-package:
  stage: deploy
  image: node:18-alpine
  needs: [build-package]
  cache: *cache-template
  before_script:
    - npm install -g pnpm@10.x
    - pnpm config set store-dir $PNPM_STORE_DIR
  script:
    - echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=https://lgd.cx/api/v4/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "//lgd.cx/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
    - >-
      node -e "const pkg=require('./package.json'); 
      pkg.publishConfig.registry='https://lgd.cx/api/v4/projects/${CI_PROJECT_ID}/packages/npm/'; 
      require('fs').writeFileSync('package.json', JSON.stringify(pkg, null, 2));"
    - pnpm publish --no-git-checks --ignore-scripts
  rules:
    - if: $CI_COMMIT_TAG
  environment:
    name: gitlab-registry
    url: https://lgd.cx/${CI_PROJECT_PATH}/-/packages
